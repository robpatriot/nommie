{
  "name": "nommie",
  "version": "0.1.0",
  "description": "Web-based multiplayer version of Nomination Whist",
  "private": true,
  "scripts": {
    "dev:lint": "pnpm fe:lint && pnpm be:lint",
    "dev:format": "pnpm fe:format && pnpm be:format",
    "dev:up": "pnpm be:up && pnpm fe:up",
    "dev:down": "pnpm be:down && pnpm fe:down",
    "dev:status": "for s in be fe; do if [ -f .dev/$s.pid ] && kill -0 $(cat .dev/$s.pid) 2>/dev/null; then echo \"$s: running (pid $(cat .dev/$s.pid))\"; else echo \"$s: stopped\"; fi; done",

    "be:up": "if [ -f .dev/be.pid ] && kill -0 $(cat .dev/be.pid) 2>/dev/null; then exit 1; fi; RUST_LOG=${RUST_LOG:-info} cargo run --manifest-path apps/backend/Cargo.toml >> .dev/dev.log 2>&1 & echo $! > .dev/be.pid",
    "be:down": "if [ -f .dev/be.pid ]; then kill $(cat .dev/be.pid) 2>/dev/null || true; rm -f .dev/be.pid; fi",
    "be:build": "cargo build --manifest-path apps/backend/Cargo.toml",
    "be:lint": "cargo clippy --manifest-path apps/backend/Cargo.toml --all-targets --all-features -- -D warnings",
    "be:format": "cargo fmt --manifest-path apps/backend/Cargo.toml --all",
    "be:test": "dotenvx run -- sh -lc '[ \"$1\" = \"--\" ] && shift; export DATABASE_URL=${DATABASE_URL}_test; cargo test --manifest-path apps/backend/Cargo.toml \"$@\" -- --nocapture' _",

    "fe:up": "if [ -f .dev/fe.pid ] && kill -0 $(cat .dev/fe.pid) 2>/dev/null; then exit 1; fi; pnpm --filter @nommie/frontend exec sh -lc 'exec next dev >> ../../.dev/dev.log 2>&1' & echo $! > .dev/fe.pid",
    "fe:down": "if [ -f .dev/fe.pid ]; then kill $(cat .dev/fe.pid) 2>/dev/null || true; rm -f .dev/fe.pid; fi",
    "fe:build": "pnpm --filter @nommie/frontend build",
    "fe:lint": "pnpm --filter @nommie/frontend lint",
    "fe:format": "pnpm --filter @nommie/frontend format",

    "db:up": "docker compose up -d postgres",
    "db:down": "docker compose down -v",
    "db:stop": "docker compose stop postgres",
    "db:logs": "docker compose logs -f postgres",
    "db:pg_isready": "dotenvx run -- sh -lc 'docker exec -it nommie-postgres pg_isready -U $POSTGRES_USER -d $POSTGRES_DB'",
    "db:psql": "dotenvx run -- sh -lc 'docker exec -e PGPASSWORD=\"$POSTGRES_PASSWORD\" -it nommie-postgres psql -U $POSTGRES_USER -d $POSTGRES_DB'",
    "db:migrate": "dotenvx run -- sh -lc 'DATABASE_URL=postgres://nommie_owner:${NOMMIE_OWNER_PASSWORD}@localhost:${POSTGRES_PORT:-5432}/nommie cargo run --manifest-path apps/backend/migration/Cargo.toml -- up'",
    "db:fresh": "dotenvx run -- sh -lc 'DATABASE_URL=postgres://nommie_owner:${NOMMIE_OWNER_PASSWORD}@localhost:${POSTGRES_PORT:-5432}/nommie cargo run --manifest-path apps/backend/migration/Cargo.toml -- fresh'",
    "db:fresh:test": "dotenvx run -- sh -lc 'DATABASE_URL=postgres://nommie_owner:${NOMMIE_OWNER_PASSWORD}@localhost:${POSTGRES_PORT:-5432}/nommie_test cargo run --manifest-path apps/backend/migration/Cargo.toml -- fresh'"
  },
  "devDependencies": {
    "@dotenvx/dotenvx": "^1.49.0",
    "@types/node": "^20.0.0",
    "eslint": "^8.57.0",
    "eslint-config-next": "15.5.x",
    "typescript": "^5.0.0"
  },
  "packageManager": "pnpm@8.0.0",
  "engines": {
    "node": ">=18.0.0",
    "pnpm": ">=8.0.0"
  },
  "pnpm": {
    "overrides": {
      "eslint": "^8.57.0"
    }
  }
}
