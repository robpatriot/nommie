{
  "scripts": {
    "lint": "pnpm fe:lint && pnpm be:lint",
    "lint:fix": "pnpm fe:lint:fix && pnpm be:lint",
    "format": "pnpm fe:format && pnpm be:format",
    "build": "pnpm fe:build && pnpm be:build",
    "dev": "pnpm be:dev && pnpm fe:dev",
    "stop": "pnpm be:stop && pnpm fe:stop",
    "status": "for s in be fe; do if [ -f .dev/$s.pid ] && kill -0 $(cat .dev/$s.pid) 2>/dev/null; then echo \"$s: running (pid $(cat .dev/$s.pid))\"; else echo \"$s: stopped\"; fi; done",
    "test": "pnpm be:test && pnpm fe:test",
    "test:v": "pnpm be:test:v && pnpm fe:test",
    "test:q": "pnpm be:test:q && pnpm --silent fe:test",
    "test:ci": "pnpm be:test:q && pnpm fe:test:cov",
    "be:dev": "if [ -f .dev/be.pid ] && kill -0 $(cat .dev/be.pid) 2>/dev/null; then exit 1; fi; RUST_LOG=${RUST_LOG:-info} cargo run --manifest-path apps/backend/Cargo.toml >> .dev/dev.log 2>&1 & echo $! > .dev/be.pid",
    "be:stop": "if [ -f .dev/be.pid ]; then kill $(cat .dev/be.pid) 2>/dev/null || true; rm -f .dev/be.pid; fi",
    "be:build": "cargo build --manifest-path apps/backend/Cargo.toml",
    "be:lint": "cargo clippy --manifest-path apps/backend/Cargo.toml --all-targets --all-features -- -D warnings",
    "be:format": "cargo +nightly fmt --manifest-path apps/backend/Cargo.toml --all",
    "be:test": "cargo nextest run --manifest-path apps/backend/Cargo.toml",
    "be:test:v": "TEST_LOG=info cargo nextest run --manifest-path apps/backend/Cargo.toml -v --success-output=immediate",
    "be:test:q": "cargo nextest run --manifest-path apps/backend/Cargo.toml --failure-output=final --hide-progress-bar --status-level=none --final-status-level=fail",
    "be:test:full": "cargo nextest run --manifest-path apps/backend/Cargo.toml --features regression-tests",
    "fe:dev": "if [ -f .dev/fe.pid ] && kill -0 $(cat .dev/fe.pid) 2>/dev/null; then exit 1; fi; pnpm --filter @nommie/frontend exec sh -lc 'exec next dev >> ../../.dev/dev.log 2>&1' & echo $! > .dev/fe.pid",
    "fe:stop": "if [ -f .dev/fe.pid ]; then kill $(cat .dev/fe.pid) 2>/dev/null || true; rm -f .dev/fe.pid; fi",
    "fe:build": "pnpm --filter @nommie/frontend build",
    "fe:lint": "pnpm --filter @nommie/frontend lint",
    "fe:lint:fix": "pnpm --filter @nommie/frontend exec eslint . --fix",
    "fe:format": "pnpm --filter @nommie/frontend format",
    "fe:test": "pnpm --filter @nommie/frontend test",
    "fe:test:watch": "pnpm --filter @nommie/frontend test:watch",
    "fe:test:cov": "pnpm --filter @nommie/frontend test:cov",
    "db:svc:up": "docker compose up -d postgres",
    "db:svc:down": "docker compose down -v",
    "db:svc:stop": "docker compose stop postgres",
    "db:svc:logs": "docker compose logs -f postgres",
    "db:svc:ready": "docker exec -it nommie-postgres pg_isready -U \"$POSTGRES_USER\" -d \"$POSTGRES_DB\"",
    "db:svc:psql": "docker exec -e PGPASSWORD=\"$POSTGRES_PASSWORD\" -it nommie-postgres psql -U \"$POSTGRES_USER\" -d \"$POSTGRES_DB\"",
    "db:mig:up": "cargo run --manifest-path apps/migration-cli/Cargo.toml -- up",
    "db:mig:refresh": "cargo run --manifest-path apps/migration-cli/Cargo.toml -- refresh"
  },
  "devDependencies": {}
}
